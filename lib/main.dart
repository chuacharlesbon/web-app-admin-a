import 'dart:async';

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_animate/flutter_animate.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:google_sign_in/google_sign_in.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Captive Portal | Connect',
      theme: ThemeData(
          colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
          useMaterial3: true,
          fontFamily: GoogleFonts.montserrat().fontFamily),
      home: const MyHomePage(title: 'Captive Portal | Connect'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {

  bool isLoading = false;
  Timer tempTimer = Timer(const Duration(seconds: 2), () {});

  List<String> getFirstNameAndLastName(String fullName) {
    int idx = fullName.indexOf(" "); // Check first occurring space
    List<String> parts = [
      fullName.substring(0, idx).trim(),
      fullName.substring(idx + 1).trim()
    ];
    return parts;
  }

  // Execute google sign in
  // It will check browser if the user is logged in in his/here Google account
  dynamic googleLogin() async {
    final googleSignIn = GoogleSignIn(
      clientId:
          '375941392209-9453ptarnjo7kuv7ajdd17s6cgb2jndk.apps.googleusercontent.com',
      scopes: ['email'],
    );
    try {
      return await googleSignIn.signIn();
    } catch (error) {
      return error;
    }
  }

  // Execute Google sign out
  // It will clean browser local storage generated by Google
  dynamic googleLogout() async {
    final googleSignIn = GoogleSignIn(
      clientId:
          '375941392209-9453ptarnjo7kuv7ajdd17s6cgb2jndk.apps.googleusercontent.com',
      scopes: ['email'],
    );
    try {
      return await googleSignIn.signOut();
    } catch (error) {
      return error;
    }
  }

  void googleSignIn() async {
    setState(() {
      isLoading = true;
    });
    final googleUser = await googleLogin();

    String fullName = googleUser.displayName;
    String firstName = getFirstNameAndLastName(fullName)[0];
    String lastName = getFirstNameAndLastName(fullName)[1];

    setState(() {
      isLoading = false;
    });

    // ignore: use_build_context_synchronously
    MyModal.genericOnFuncModal(ctx: context);
  }

  void loadMobile() {
    setState(() {
      isLoading = true;
    });

    tempTimer = Timer(const Duration(seconds: 2), () {
      setState(() {
        isLoading = false;
      });
      MyModal.genericOnFuncModal(ctx: context);
      tempTimer.cancel();
    });
  }

  @override
  void dispose() {
    tempTimer.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      /* appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: Text(widget.title),
      ), */
      body: Container(
        decoration: BoxDecoration(
            image: DecorationImage(
                image: NetworkImage(
                  'https://captive-portal-html-imtg.vercel.app/tekqore.jpg',
                ),
                fit: BoxFit.cover)),
        child: Stack(
          children: [
            Container(
              width: double.infinity,
              height: double.infinity,
              color: Colors.white.withOpacity(0.75),
              padding: const EdgeInsets.all(16),
              child: Center(
                child: Container(
                  constraints: const BoxConstraints(maxWidth: 320),
                  padding: const EdgeInsets.all(16),
                  decoration: BoxDecoration(
                      color: Colors.white,
                      border: Border.all(color: Colors.grey.withOpacity(0.75)),
                      borderRadius: BorderRadius.circular(24)),
                  child: Column(
                    mainAxisSize: MainAxisSize.min,
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: <Widget>[
                      SizedBox(
                        height: 24,
                      ),
                      TextFormField(
                          onFieldSubmitted: (value) {
                            loadMobile();
                          },
                          keyboardType: TextInputType.number,
                          inputFormatters: [
                            FilteringTextInputFormatter.allow(
                              RegExp(r'^[0-9]+$'),
                            ),
                          ],
                          style: TextStyle(
                              color: Colors.deepPurple,
                              fontFamily: GoogleFonts.montserrat().fontFamily,
                              fontWeight: FontWeight.bold,
                              fontSize: 14),
                          decoration: InputDecoration(
                            hintText: 'Mobile number',
                            hintStyle: TextStyle(
                                color: Colors.grey,
                                fontFamily: GoogleFonts.montserrat().fontFamily,
                                fontWeight: FontWeight.bold,
                                fontSize: 14),
                            focusedBorder: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(12.0),
                                borderSide:
                                    BorderSide(color: Colors.deepPurple)),
                            enabledBorder: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(12.0),
                                borderSide:
                                    BorderSide(color: Colors.deepPurple)),
                          )).animate().fadeIn(delay: 250.ms).slideX(begin: .25),
                      SizedBox(
                        height: 24,
                      ),
                      Row(
                        children: [
                          const Expanded(
                            child: Padding(
                              padding: EdgeInsets.fromLTRB(15, 0, 32, 0),
                              child: Divider(
                                color: Colors.grey,
                              ),
                            ),
                          ),
                          Text(
                            'Or login with',
                          ),
                          const Expanded(
                            child: Padding(
                              padding: EdgeInsets.fromLTRB(32, 0, 15, 0),
                              child: Divider(
                                color: Colors.grey,
                              ),
                            ),
                          ),
                        ],
                      ),
                      SizedBox(
                        height: 24,
                      ),
                      Container(
                        padding: const EdgeInsets.all(8),
                        decoration: BoxDecoration(
                            border: Border.all(color: Colors.deepPurple),
                            borderRadius: BorderRadius.circular(24)),
                        child: Row(
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: [
                              Image.asset('images/social-login-gmail-icon.png'),
                              SizedBox(
                                width: 10,
                              ),
                              Text(
                                'Gmail',
                                style: TextStyle(
                                    color: Colors.deepPurple,
                                    fontFamily:
                                        GoogleFonts.montserrat().fontFamily,
                                    fontWeight: FontWeight.bold,
                                    fontSize: 14),
                              )
                            ]),
                      ).animate().fadeIn(delay: 500.ms).slideX(begin: .25),
                      SizedBox(
                        height: 24,
                      ),
                    ],
                  ),
                ),
              ),
            ),
            if(isLoading)
            Container(
              width: double.infinity,
              height: double.infinity,
              color: Colors.black.withOpacity(0.50),
              child: Center(child: CircularProgressIndicator()),
            )
          ],
        ),
      ), // This trailing comma makes auto-formatting nicer for build methods.
    );
  }
}

class MyModal {
  static void genericOnFuncModal({
    required BuildContext ctx,
  }) {
    showDialog(
      context: ctx,
      builder: (BuildContext _) {
        return StatefulBuilder(
          builder: (BuildContext context, StateSetter setState) {
            return AlertDialog(
              surfaceTintColor: Colors.transparent,
              shadowColor: Colors.transparent,
              backgroundColor: Colors.white,
              insetPadding: const EdgeInsets.all(12),
              actionsAlignment: MainAxisAlignment.center,
              content: Container(
                color: Colors.transparent,
                constraints: const BoxConstraints(maxWidth: 300),
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    Text(
                      "Login successful!",
                      style: TextStyle(
                        fontFamily: GoogleFonts.montserrat().fontFamily,
                        fontWeight: FontWeight.bold,
                        fontSize: 16,
                      ),
                      textAlign: TextAlign.center,
                    ),
                  ],
                ),
              ),
              actions: [
                GestureDetector(
                    onTap: () {
                      Navigator.pop(_, true);
                    },
                    child: Container(
                      padding: const EdgeInsets.all(12),
                      decoration: BoxDecoration(
                          border: Border.all(color: Colors.deepPurple),
                          borderRadius: BorderRadius.circular(12.0),
                          color: Colors.deepPurple),
                      child: Center(
                          child: Text(
                        "Ok",
                        style: TextStyle(
                            fontFamily: GoogleFonts.montserrat().fontFamily,
                            fontWeight: FontWeight.bold,
                            fontSize: 16,
                            color: Colors.white),
                      )),
                    )),
              ],
            );
          },
        );
      },
    );
  }
}
